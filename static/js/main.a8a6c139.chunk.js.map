{"version":3,"sources":["components/Title.js","components/Matrix.js","util/parseImage.js","components/FileInput.js","App.js","reportWebVitals.js","index.js"],"names":["Title","_ref","data","updateData","_useState","useState","JSON","parse","stringify","_useState2","Object","slicedToArray","localInput","setLocalInput","react_default","a","createElement","Fragment","rows","cols","value","onChange","d","target","onClick","toUpperCase","searchNext","matrix","curI","curJ","toI","toJ","lookFor","length","slice","console","log","endI","endJ","e","Matrix","searchWord","parsedData","setParsedData","_useState3","_useState4","highlight","setHighlight","useEffect","parseD","split","map","each","newObj","i","j","result","p","q","concat","Row","_ref2","rowNum","style","height","LINEHEIGHT","display","alignItems","gap","justifyContent","Array","prototype","call","col","idx","bgColor","flex","background","border","borderRadius","fontSize","key","row","parseImage","asyncToGenerator","_regeneratorRuntime","mark","_callee","uri","logger","worker","_yield$worker$recogni","text","wrap","_context","prev","next","createWorker","m","sent","loadLanguage","initialize","recognize","terminate","abrupt","stop","_x","_x2","apply","this","arguments","FileInput","imageText","file","setFile","percent","setPercent","readText","FileInput_regeneratorRuntime","event","files","item","URL","createObjectURL","onImageFileChange","_ref3","_callee2","_context2","Math","round","progress","type","accept","src","alt","width","App","srcText","setSrcText","toSearch","setToSearch","className","FileInput_FileInput","txt","Title_Title","Matrix_Matrix","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a8a6c139.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const Title = ({ data, updateData }) => {\r\n  const [localInput, setLocalInput] = useState(\r\n    JSON.parse(JSON.stringify(data || \"\"))\r\n  );\r\n  return (\r\n    <>\r\n      <div>Please input word puzzle</div>\r\n      {true && (\r\n        <>\r\n          <textarea\r\n            rows={10}\r\n            cols={20}\r\n            value={localInput}\r\n            onChange={(d) => {\r\n              setLocalInput(d.target.value);\r\n            }}\r\n          />\r\n        </>\r\n      )}\r\n      <button onClick={() => updateData(localInput.toUpperCase())}>\r\n        update\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst LINEHEIGHT = 26;\r\nconst searchNext = (matrix, curI, curJ, toI, toJ, lookFor) => {\r\n  try {\r\n    const result = matrix[curI][curJ] === lookFor[0];\r\n    // console.log('result', matrix[curI + toI][curJ + toJ], lookFor[0]);\r\n    if (!result) {\r\n      return 0;\r\n    }\r\n    if (lookFor.length > 1) {\r\n      return searchNext(\r\n        matrix,\r\n        curI + toI,\r\n        curJ + toJ,\r\n        toI,\r\n        toJ,\r\n        lookFor.slice(1)\r\n      );\r\n    }\r\n    console.log(\"good\");\r\n    return { endI: curI, endJ: curJ, toI, toJ };\r\n  } catch (e) {\r\n    return 0;\r\n  }\r\n};\r\nexport const Matrix = ({ data, searchWord }) => {\r\n  const [parsedData, setParsedData] = useState([[]]);\r\n  const [highlight, setHighlight] = useState({});\r\n  useEffect(() => {\r\n    console.log(data);\r\n    const parseD = (data || \"\").split(\"\\n\").map((each) => {\r\n      return each;\r\n    });\r\n    console.log(\"parseD\", parseD);\r\n    setParsedData(parseD);\r\n  }, [data]);\r\n  useEffect(() => {\r\n    const newObj = {};\r\n    console.log(\"parsedData\", parsedData);\r\n    for (let i = 0; i < parsedData.length; i++) {\r\n      for (let j = 0; j < parsedData[i].length; j++) {\r\n        console.log(\"here\", parsedData[i][j], searchWord);\r\n        const result =\r\n          searchNext(parsedData, i, j, -1, -1, searchWord) ||\r\n          searchNext(parsedData, i, j, -1, 0, searchWord) ||\r\n          searchNext(parsedData, i, j, -1, 1, searchWord) ||\r\n          searchNext(parsedData, i, j, 0, -1, searchWord) ||\r\n          searchNext(parsedData, i, j, 0, 1, searchWord) ||\r\n          searchNext(parsedData, i, j, 1, -1, searchWord) ||\r\n          searchNext(parsedData, i, j, 1, 0, searchWord) ||\r\n          searchNext(parsedData, i, j, 1, 1, searchWord);\r\n        if (result !== 0) {\r\n          // newObj[`${i}#${j}`] = true;\r\n          console.log(\"result\", result);\r\n          let p = i,\r\n            q = j;\r\n          newObj[`${p}#${q}`] = true;\r\n          while (p !== result.endI || q !== result.endJ) {\r\n            p += result.toI;\r\n            q += result.toJ;\r\n            newObj[`${p}#${q}`] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(\"hight\", newObj);\r\n    setHighlight(newObj);\r\n  }, [searchWord]);\r\n  const Row = ({ rowNum, data }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: `${LINEHEIGHT + 8}px`,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: \"2px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {Array.prototype.map.call(data, (col, idx) => {\r\n          const bgColor = highlight[`${rowNum}#${idx}`] ? \"grey\" : \"white\";\r\n          return (\r\n            <div\r\n              style={{\r\n                flex: `0 1 ${LINEHEIGHT}px`,\r\n                background: bgColor,\r\n                border: \"double 1px purple\",\r\n                borderRadius: \"3px\",\r\n                // lineHeight: '8px',\r\n                fontSize: \"20px\",\r\n              }}\r\n              key={`${col}${idx}`}\r\n            >\r\n              <span> {col}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Matrix</h3>\r\n      <div style={{ border: \"double 1px purple\" }}>\r\n        {parsedData.map((row, idx) => {\r\n          return (\r\n            <div>\r\n              <Row rowNum={idx} data={row} key={`${row}${idx}`} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { createWorker } from \"tesseract.js\";\r\n\r\nexport const parseImage = async (uri, logger) => {\r\n  const worker = await createWorker({\r\n    logger: (m) => logger(m), // Add logger here\r\n  });\r\n  await worker.loadLanguage(\"eng\");\r\n  await worker.initialize(\"eng\");\r\n  console.log(\"uri\", uri);\r\n  const {\r\n    data: { text },\r\n  } = await worker.recognize(\r\n    uri || \"https://tesseract.projectnaptha.com/img/eng_bw.png\"\r\n  );\r\n  console.log(text);\r\n  await worker.terminate();\r\n  return text;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { parseImage } from \"../util/parseImage\";\r\n\r\nexport const FileInput = ({ imageText }) => {\r\n  const [file, setFile] = useState();\r\n  const [percent, setPercent] = useState(0);\r\n  const readText = async (event) => {\r\n    const file = event.target.files.item(0);\r\n    setFile(URL.createObjectURL(file));\r\n    console.log(URL.createObjectURL(file));\r\n    onImageFileChange(file);\r\n  };\r\n  const onImageFileChange = async (file) => {\r\n    const text = await parseImage(file, (logger) => {\r\n      console.log(\"logger\", logger);\r\n      setPercent(Math.round(logger.progress * 100));\r\n    });\r\n    console.log(\"parsed text\", text);\r\n    return imageText(text);\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/png, image/gif, image/jpeg\"\r\n        onChange={(event) => {\r\n          readText(event);\r\n        }}\r\n      />\r\n      {percent}%\r\n      <img\r\n        src={file}\r\n        alt=\"uploaded\"\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n      ></img>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Title } from \"./components/Title\";\r\nimport { Matrix } from \"./components/Matrix\";\r\nimport { FileInput } from \"./components/FileInput\";\r\n\r\nfunction App() {\r\n  const [srcText, setSrcText] = useState(\"asfsadf\\ndfhfdh\");\r\n  const [toSearch, setToSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Word Search</h2>\r\n      <FileInput imageText={(txt) => setSrcText(txt)} />\r\n      <Title\r\n        key={srcText}\r\n        data={srcText}\r\n        updateData={(d) => {\r\n          console.log(\"new d\", d);\r\n          setSrcText(d);\r\n        }}\r\n      />\r\n      <Matrix data={srcText} searchWord={toSearch} />\r\n      <div>\r\n        <h3>\r\n          Seach Word:\r\n          <input\r\n            value={toSearch}\r\n            onChange={(d) => setToSearch(d.target.value.toUpperCase())}\r\n          />\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}